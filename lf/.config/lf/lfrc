# interpreter for shell commands
set shell sh

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 10

# Mapear la tecla enter ejecutar comandos de shell 
map <enter> shell

# Ejecuta el archivo actual (solo si es ejecutable) 
map x $$f
map X !$f

# dedicated keys for file opener actions
map o &mimeopen $f
map O $mimeopen --ask $f

# Funcion para abrir archivos con un programa en especifico
cmd open ${{
    case $f in
        *.c|*.rs)
            vim "$f";;
        *.png|*.jpg)
            feh "$f"&;;
        *.mp4)
            vlc "$f"&;;
        *.pdf)
            firefox "$f";;
        *) 
            printf "Hola pue"
            read ans;;
    esac
}}

# Definiendo comando perzonalizado para abrir archivos 
# define a custom 'rename' command without prompt for overwrite
# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
# map r push :rename<space>

# make sure trash folder exists
# %mkdir -p ~/.trash

# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
cmd trash %set -f; mv $fx ~/.trash

# Funcion para eliminar archivos o carpetas
cmd delete ${{
    set -f
    clear
    printf "$fx\n"
    printf "delete?[y/n]\n"
    read ans
    [ $ans = "y" ] && rm -rf $fx
}}

# Funcion para cambiar de walpaper
cmd setWallpaper ${{
    feh --bg-fil "$f"    
}}

map sw setWallpaper

map ss :set hidden
map sS :set hidden!

map D delete
# use '<delete>' key for either 'trash' or 'delete' command
# map <delete> trash
# map <delete> delete

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}
